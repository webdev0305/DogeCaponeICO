/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Crowdsale, CrowdsaleInterface } from "../Crowdsale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "holderWeiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "updateRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "updateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_account",
        type: "address",
      },
    ],
    name: "updateWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610db4380380610db483398101604081905261002f916101e1565b600160005561003d3361018f565b600083116100925760405162461bcd60e51b815260206004820152601460248201527f43726f776473616c653a2072617465206973203000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166100f65760405162461bcd60e51b815260206004820152602560248201527f43726f776473616c653a2077616c6c657420697320746865207a65726f206164604482015264647265737360d81b6064820152608401610089565b6001600160a01b0381166101585760405162461bcd60e51b8152602060048201526024808201527f43726f776473616c653a20746f6b656e20697320746865207a65726f206164646044820152637265737360e01b6064820152608401610089565b600492909255600380546001600160a01b039283166001600160a01b0319918216179091556002805492909316911617905561023b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806000606084860312156101f5578283fd5b83519250602084015161020781610223565b604085015190925061021881610223565b809150509250925092565b6001600160a01b038116811461023857600080fd5b50565b610b6a8061024a6000396000f3fe6080604052600436106100ab5760003560e01c80637ad3def2116100645780637ad3def21461019b578063848b86e3146101bb5780638da5cb5b146101db578063ec8ac4d8146101f9578063f2fde38b14610207578063fc0c546a1461022757600080fd5b80632c4e722e146100c55780634042b66f146100e9578063521eb273146100fe57806369ea1771146101305780636cae5ef914610150578063715018a61461018657600080fd5b366100c0576100be33610245565b610245565b005b600080fd5b3480156100d157600080fd5b506004545b6040519081526020015b60405180910390f35b3480156100f557600080fd5b506005546100d6565b34801561010a57600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020016100e0565b34801561013c57600080fd5b506100be61014b366004610a06565b610362565b34801561015c57600080fd5b506100d661016b3660046109ca565b6001600160a01b031660009081526006602052604090205490565b34801561019257600080fd5b506100be610391565b3480156101a757600080fd5b506100be6101b63660046109ca565b6103c7565b3480156101c757600080fd5b506100be6101d63660046109ca565b610413565b3480156101e757600080fd5b506001546001600160a01b0316610118565b6100be6100b93660046109ca565b34801561021357600080fd5b506100be6102223660046109ca565b61045f565b34801561023357600080fd5b506002546001600160a01b0316610118565b6002600054141561029d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055346102ad82826104fa565b60006102b8826105d4565b9050816005546102c89190610aa2565b600555336000908152600660205260409020546102e6908390610aa2565b3360009081526006602052604090205561030083826105ea565b60408051838152602081018390526001600160a01b0385169133917f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b910160405180910390a361034e6105f4565b610358838361062d565b5050600160005550565b6001546001600160a01b0316331461038c5760405162461bcd60e51b815260040161029490610a6d565b600455565b6001546001600160a01b031633146103bb5760405162461bcd60e51b815260040161029490610a6d565b6103c560006106aa565b565b6001546001600160a01b031633146103f15760405162461bcd60e51b815260040161029490610a6d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461043d5760405162461bcd60e51b815260040161029490610a6d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146104895760405162461bcd60e51b815260040161029490610a6d565b6001600160a01b0381166104ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610294565b6104f7816106aa565b50565b6001600160a01b0382166105635760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a65604482015269726f206164647265737360b01b6064820152608401610294565b67016345785d8a00008110156105d05760405162461bcd60e51b815260206004820152602c60248201527f43726f776473616c653a20776569416d6f756e74206d7573742062652062696760448201526b67657220302e3120424e422160a01b6064820152608401610294565b5050565b6000600454826105e49190610aba565b92915050565b6105d082826106fc565b6003546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156104f7573d6000803e3d6000fd5b33600090815260066020526040902054671bc16d674ec8000010156105d05760405162461bcd60e51b815260206004820152602d60248201527f43726f776473616c653a20776569416d6f756e74206d757374206265206c657360448201526c73207468616e203220424e422160981b6064820152608401610294565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002546105d0906001600160a01b031683836040516001600160a01b03831660248201526044810182905261077090849063a9059cbb60e01b9060640160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610775565b505050565b60006107ca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108479092919063ffffffff16565b80519091501561077057808060200190518101906107e891906109e6565b6107705760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610294565b60606108568484600085610860565b90505b9392505050565b6060824710156108c15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610294565b6001600160a01b0385163b6109185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610294565b600080866001600160a01b031685876040516109349190610a1e565b60006040518083038185875af1925050503d8060008114610971576040519150601f19603f3d011682016040523d82523d6000602084013e610976565b606091505b5091509150610986828286610991565b979650505050505050565b606083156109a0575081610859565b8251156109b05782518084602001fd5b8160405162461bcd60e51b81526004016102949190610a3a565b6000602082840312156109db578081fd5b813561085981610b1f565b6000602082840312156109f7578081fd5b81518015158114610859578182fd5b600060208284031215610a17578081fd5b5035919050565b60008251610a30818460208701610ad9565b9190910192915050565b6020815260008251806020840152610a59816040850160208701610ad9565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610ab557610ab5610b09565b500190565b6000816000190483118215151615610ad457610ad4610b09565b500290565b60005b83811015610af4578181015183820152602001610adc565b83811115610b03576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146104f757600080fdfea264697066735822122028c4798af8256c8b9231566aa1788f13994af274e809792a78c4cbca5f0d592964736f6c63430008040033";

type CrowdsaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdsaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Crowdsale__factory extends ContractFactory {
  constructor(...args: CrowdsaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Crowdsale";
  }

  deploy(
    rate: BigNumberish,
    wallet: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Crowdsale> {
    return super.deploy(
      rate,
      wallet,
      token,
      overrides || {}
    ) as Promise<Crowdsale>;
  }
  getDeployTransaction(
    rate: BigNumberish,
    wallet: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(rate, wallet, token, overrides || {});
  }
  attach(address: string): Crowdsale {
    return super.attach(address) as Crowdsale;
  }
  connect(signer: Signer): Crowdsale__factory {
    return super.connect(signer) as Crowdsale__factory;
  }
  static readonly contractName: "Crowdsale";
  public readonly contractName: "Crowdsale";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdsaleInterface {
    return new utils.Interface(_abi) as CrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Crowdsale {
    return new Contract(address, _abi, signerOrProvider) as Crowdsale;
  }
}
