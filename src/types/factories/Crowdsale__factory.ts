/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Crowdsale, CrowdsaleInterface } from "../Crowdsale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "holderWeiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a13380380610a1383398101604081905261002f91610183565b6001600055826100865760405162461bcd60e51b815260206004820152601460248201527f43726f776473616c653a2072617465206973203000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166100ea5760405162461bcd60e51b815260206004820152602560248201527f43726f776473616c653a2077616c6c657420697320746865207a65726f206164604482015264647265737360d81b606482015260840161007d565b6001600160a01b03811661014c5760405162461bcd60e51b8152602060048201526024808201527f43726f776473616c653a20746f6b656e20697320746865207a65726f206164646044820152637265737360e01b606482015260840161007d565b600392909255600280546001600160a01b039283166001600160a01b031991821617909155600180549290931691161790556101dd565b600080600060608486031215610197578283fd5b8351925060208401516101a9816101c5565b60408501519092506101ba816101c5565b809150509250925092565b6001600160a01b03811681146101da57600080fd5b50565b610827806101ec6000396000f3fe6080604052600436106100595760003560e01c80632c4e722e146100735780634042b66f14610097578063521eb273146100ac5780636cae5ef9146100de578063ec8ac4d814610114578063fc0c546a1461012257600080fd5b3661006e5761006c33610140565b610140565b005b600080fd5b34801561007f57600080fd5b506003545b6040519081526020015b60405180910390f35b3480156100a357600080fd5b50600454610084565b3480156100b857600080fd5b506002546001600160a01b03165b6040516001600160a01b03909116815260200161008e565b3480156100ea57600080fd5b506100846100f93660046106de565b6001600160a01b031660009081526005602052604090205490565b61006c6100673660046106de565b34801561012e57600080fd5b506001546001600160a01b03166100c6565b600260005414156101985760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055346101a8828261025d565b60006101b382610337565b9050816004546101c39190610774565b600455336000908152600560205260409020546101e1908390610774565b336000908152600560205260409020556101fb838261034d565b60408051838152602081018390526001600160a01b0385169133917f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b910160405180910390a3610249610357565b6102538383610393565b5050600160005550565b6001600160a01b0382166102c65760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a65604482015269726f206164647265737360b01b606482015260840161018f565b67016345785d8a00008110156103335760405162461bcd60e51b815260206004820152602c60248201527f43726f776473616c653a20776569416d6f756e74206d7573742062652062696760448201526b67657220302e3120424e422160a01b606482015260840161018f565b5050565b600060035482610347919061078c565b92915050565b6103338282610410565b6002546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610390573d6000803e3d6000fd5b50565b33600090815260056020526040902054671bc16d674ec8000010156103335760405162461bcd60e51b815260206004820152602d60248201527f43726f776473616c653a20776569416d6f756e74206d757374206265206c657360448201526c73207468616e203220424e422160981b606482015260840161018f565b600154610333906001600160a01b031683836040516001600160a01b03831660248201526044810182905261048490849063a9059cbb60e01b9060640160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610489565b505050565b60006104de826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661055b9092919063ffffffff16565b80519091501561048457808060200190518101906104fc9190610705565b6104845760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161018f565b606061056a8484600085610574565b90505b9392505050565b6060824710156105d55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161018f565b6001600160a01b0385163b61062c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018f565b600080866001600160a01b031685876040516106489190610725565b60006040518083038185875af1925050503d8060008114610685576040519150601f19603f3d011682016040523d82523d6000602084013e61068a565b606091505b509150915061069a8282866106a5565b979650505050505050565b606083156106b457508161056d565b8251156106c45782518084602001fd5b8160405162461bcd60e51b815260040161018f9190610741565b6000602082840312156106ef578081fd5b81356001600160a01b038116811461056d578182fd5b600060208284031215610716578081fd5b8151801515811461056d578182fd5b600082516107378184602087016107ab565b9190910192915050565b60208152600082518060208401526107608160408501602087016107ab565b601f01601f19169190910160400192915050565b60008219821115610787576107876107db565b500190565b60008160001904831182151516156107a6576107a66107db565b500290565b60005b838110156107c65781810151838201526020016107ae565b838111156107d5576000848401525b50505050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220619ff2242b19094a23a6dcbf2e124fb06e86ecd869a8a5d72aad5f3a5265b97864736f6c63430008040033";

type CrowdsaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdsaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Crowdsale__factory extends ContractFactory {
  constructor(...args: CrowdsaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Crowdsale";
  }

  deploy(
    rate: BigNumberish,
    wallet: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Crowdsale> {
    return super.deploy(
      rate,
      wallet,
      token,
      overrides || {}
    ) as Promise<Crowdsale>;
  }
  getDeployTransaction(
    rate: BigNumberish,
    wallet: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(rate, wallet, token, overrides || {});
  }
  attach(address: string): Crowdsale {
    return super.attach(address) as Crowdsale;
  }
  connect(signer: Signer): Crowdsale__factory {
    return super.connect(signer) as Crowdsale__factory;
  }
  static readonly contractName: "Crowdsale";
  public readonly contractName: "Crowdsale";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdsaleInterface {
    return new utils.Interface(_abi) as CrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Crowdsale {
    return new Contract(address, _abi, signerOrProvider) as Crowdsale;
  }
}
