/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ITManTokenCrowdsale,
  ITManTokenCrowdsaleInterface,
} from "../ITManTokenCrowdsale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_openingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_closingTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevClosingTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newClosingTime",
        type: "uint256",
      },
    ],
    name: "TimedCrowdsaleExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "closingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "holderWeiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "updateRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "updateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_account",
        type: "address",
      },
    ],
    name: "updateWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012c2380380620012c283398101604081905262000034916200036b565b60016000558181848888886200004a3362000319565b60008311620000a05760405162461bcd60e51b815260206004820152601460248201527f43726f776473616c653a2072617465206973203000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038216620001065760405162461bcd60e51b815260206004820152602560248201527f43726f776473616c653a2077616c6c657420697320746865207a65726f206164604482015264647265737360d81b606482015260840162000097565b6001600160a01b0381166200016a5760405162461bcd60e51b8152602060048201526024808201527f43726f776473616c653a20746f6b656e20697320746865207a65726f206164646044820152637265737360e01b606482015260840162000097565b600492909255600380546001600160a01b03199081166001600160a01b039384161790915560028054909116928216929092179091558116620002165760405162461bcd60e51b815260206004820152603460248201527f416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657460448201527f20697320746865207a65726f2061646472657373000000000000000000000000606482015260840162000097565b600780546001600160a01b0319166001600160a01b0392909216919091179055428210156200029d5760405162461bcd60e51b81526020600482015260336024820152600080516020620012a283398151915260448201527f6265666f72652063757272656e742074696d6500000000000000000000000000606482015260840162000097565b818111620003035760405162461bcd60e51b81526020600482015260376024820152600080516020620012a283398151915260448201527f6e6f74206265666f726520636c6f73696e672074696d65000000000000000000606482015260840162000097565b60089190915560095550620003f3945050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060008060008060c0878903121562000384578182fd5b8651955060208701516200039881620003da565b6040880151909550620003ab81620003da565b6060880151909450620003be81620003da565b809350506080870151915060a087015190509295509295509295565b6001600160a01b0381168114620003f057600080fd5b50565b610e9f80620004036000396000f3fe60806040526004361061010d5760003560e01c80637ad3def211610095578063bf58390311610064578063bf583903146102bd578063bff99c6c146102d2578063ec8ac4d8146102f0578063f2fde38b146102fe578063fc0c546a1461031e57600080fd5b80637ad3def21461024a578063848b86e31461026a5780638da5cb5b1461028a578063b7a8807c146102a857600080fd5b80634b6753bc116100dc5780634b6753bc14610198578063521eb273146101ad57806369ea1771146101df5780636cae5ef9146101ff578063715018a61461023557600080fd5b80631515bc2b146101275780632c4e722e1461014f5780634042b66f1461016e57806347535d7b1461018357600080fd5b36610122576101203361033c565b61033c565b005b600080fd5b34801561013357600080fd5b5060095442115b60405190151581526020015b60405180910390f35b34801561015b57600080fd5b506004545b604051908152602001610146565b34801561017a57600080fd5b50600554610160565b34801561018f57600080fd5b5061013a610459565b3480156101a457600080fd5b50600954610160565b3480156101b957600080fd5b506003546001600160a01b03165b6040516001600160a01b039091168152602001610146565b3480156101eb57600080fd5b506101206101fa366004610d27565b610474565b34801561020b57600080fd5b5061016061021a366004610ceb565b6001600160a01b031660009081526006602052604090205490565b34801561024157600080fd5b506101206104a3565b34801561025657600080fd5b50610120610265366004610ceb565b6104d9565b34801561027657600080fd5b50610120610285366004610ceb565b610525565b34801561029657600080fd5b506001546001600160a01b03166101c7565b3480156102b457600080fd5b50600854610160565b3480156102c957600080fd5b50610160610571565b3480156102de57600080fd5b506007546001600160a01b03166101c7565b61012061011b366004610ceb565b34801561030a57600080fd5b50610120610319366004610ceb565b610697565b34801561032a57600080fd5b506002546001600160a01b03166101c7565b600260005414156103945760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055346103a48282610732565b60006103af8261078f565b9050816005546103bf9190610ddb565b600555336000908152600660205260409020546103dd908390610ddb565b336000908152600660205260409020556103f783826107a5565b60408051838152602081018390526001600160a01b0385169133917f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b910160405180910390a36104456107af565b61044f83836107e8565b5050600160005550565b6000600854421015801561046f57506009544211155b905090565b6001546001600160a01b0316331461049e5760405162461bcd60e51b815260040161038b90610da6565b600455565b6001546001600160a01b031633146104cd5760405162461bcd60e51b815260040161038b90610da6565b6104d76000610865565b565b6001546001600160a01b031633146105035760405162461bcd60e51b815260040161038b90610da6565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461054f5760405162461bcd60e51b815260040161038b90610da6565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600061046f6105886002546001600160a01b031690565b6007546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a082319060240160206040518083038186803b1580156105cc57600080fd5b505afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610d3f565b6002546001600160a01b0316600754604051636eb1769f60e11b81526001600160a01b03918216600482015230602482015291169063dd62ed3e9060440160206040518083038186803b15801561065a57600080fd5b505afa15801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610d3f565b6108b7565b6001546001600160a01b031633146106c15760405162461bcd60e51b815260040161038b90610da6565b6001600160a01b0381166107265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161038b565b61072f81610865565b50565b61073a610459565b6107815760405162461bcd60e51b81526020600482015260186024820152772a34b6b2b221b937bbb239b0b6329d103737ba1037b832b760411b604482015260640161038b565b61078b82826108cf565b5050565b60006004548261079f9190610df3565b92915050565b61078b8282610928565b6003546040516001600160a01b03909116903480156108fc02916000818181858888f1935050505015801561072f573d6000803e3d6000fd5b33600090815260066020526040902054671bc16d674ec80000101561078b5760405162461bcd60e51b815260206004820152602d60248201527f43726f776473616c653a20776569416d6f756e74206d757374206265206c657360448201526c73207468616e203220424e422160981b606482015260840161038b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008183106108c657816108c8565b825b9392505050565b6108d7610459565b61091e5760405162461bcd60e51b81526020600482015260186024820152772a34b6b2b221b937bbb239b0b6329d103737ba1037b832b760411b604482015260640161038b565b61078b8282610932565b61078b8282610a08565b6001600160a01b03821661099b5760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a65604482015269726f206164647265737360b01b606482015260840161038b565b67016345785d8a000081101561078b5760405162461bcd60e51b815260206004820152602c60248201527f43726f776473616c653a20776569416d6f756e74206d7573742062652062696760448201526b67657220302e3120424e422160a01b606482015260840161038b565b60075461078b906001600160a01b03168383610a2c6002546001600160a01b031690565b604080516001600160a01b038681166024830152858116604483015260648083018690528351808403909101815260849092019092526020810180516001600160e01b03166323b872dd60e01b179052911693929190610a8d908590610a93565b50505050565b6000610ae8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b6a9092919063ffffffff16565b805190915015610b655780806020019051810190610b069190610d07565b610b655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161038b565b505050565b6060610b798484600085610b81565b949350505050565b606082471015610be25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161038b565b6001600160a01b0385163b610c395760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038b565b600080866001600160a01b03168587604051610c559190610d57565b60006040518083038185875af1925050503d8060008114610c92576040519150601f19603f3d011682016040523d82523d6000602084013e610c97565b606091505b5091509150610ca7828286610cb2565b979650505050505050565b60608315610cc15750816108c8565b825115610cd15782518084602001fd5b8160405162461bcd60e51b815260040161038b9190610d73565b600060208284031215610cfc578081fd5b81356108c881610e54565b600060208284031215610d18578081fd5b815180151581146108c8578182fd5b600060208284031215610d38578081fd5b5035919050565b600060208284031215610d50578081fd5b5051919050565b60008251610d69818460208701610e12565b9190910192915050565b6020815260008251806020840152610d92816040850160208701610e12565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610dee57610dee610e3e565b500190565b6000816000190483118215151615610e0d57610e0d610e3e565b500290565b60005b83811015610e2d578181015183820152602001610e15565b83811115610a8d5750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461072f57600080fdfea26469706673582212205feefdde71d5fcd01b112f0769a0fb793eb0efca7abda4eb57133f472b1fff6f64736f6c6343000804003354696d656443726f776473616c653a206f70656e696e672074696d6520697320";

type ITManTokenCrowdsaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ITManTokenCrowdsaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ITManTokenCrowdsale__factory extends ContractFactory {
  constructor(...args: ITManTokenCrowdsaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ITManTokenCrowdsale";
  }

  deploy(
    _rate: BigNumberish,
    _wallet: string,
    _token: string,
    _tokenWallet: string,
    _openingTime: BigNumberish,
    _closingTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ITManTokenCrowdsale> {
    return super.deploy(
      _rate,
      _wallet,
      _token,
      _tokenWallet,
      _openingTime,
      _closingTime,
      overrides || {}
    ) as Promise<ITManTokenCrowdsale>;
  }
  getDeployTransaction(
    _rate: BigNumberish,
    _wallet: string,
    _token: string,
    _tokenWallet: string,
    _openingTime: BigNumberish,
    _closingTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rate,
      _wallet,
      _token,
      _tokenWallet,
      _openingTime,
      _closingTime,
      overrides || {}
    );
  }
  attach(address: string): ITManTokenCrowdsale {
    return super.attach(address) as ITManTokenCrowdsale;
  }
  connect(signer: Signer): ITManTokenCrowdsale__factory {
    return super.connect(signer) as ITManTokenCrowdsale__factory;
  }
  static readonly contractName: "ITManTokenCrowdsale";
  public readonly contractName: "ITManTokenCrowdsale";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ITManTokenCrowdsaleInterface {
    return new utils.Interface(_abi) as ITManTokenCrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITManTokenCrowdsale {
    return new Contract(address, _abi, signerOrProvider) as ITManTokenCrowdsale;
  }
}
