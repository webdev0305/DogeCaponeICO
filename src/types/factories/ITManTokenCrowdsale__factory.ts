/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ITManTokenCrowdsale,
  ITManTokenCrowdsaleInterface,
} from "../ITManTokenCrowdsale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_openingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_closingTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevClosingTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newClosingTime",
        type: "uint256",
      },
    ],
    name: "TimedCrowdsaleExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_getClaimableTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_processPurchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimableRatePerDay",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTransferToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "holderWeiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTotalWeiAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWeiAmountForHolder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_value",
        type: "uint32",
      },
    ],
    name: "setClaimableRatePerDay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setEnableTransferToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setMaxTotalWeiAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setMaxWeiAmountForHolder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    name: "setStartTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "updateRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "updateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_account",
        type: "address",
      },
    ],
    name: "updateWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526006805460ff19169055426007556008805463ffffffff191661014d179055671bc16d674ec800006009556802b5e3af16b1880000600a553480156200004957600080fd5b506040516200190a3803806200190a8339810160408190526200006c91620003a3565b6001600055818184888888620000823362000351565b60008311620000d85760405162461bcd60e51b815260206004820152601460248201527f43726f776473616c653a2072617465206973203000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166200013e5760405162461bcd60e51b815260206004820152602560248201527f43726f776473616c653a2077616c6c657420697320746865207a65726f206164604482015264647265737360d81b6064820152608401620000cf565b6001600160a01b038116620001a25760405162461bcd60e51b8152602060048201526024808201527f43726f776473616c653a20746f6b656e20697320746865207a65726f206164646044820152637265737360e01b6064820152608401620000cf565b600492909255600380546001600160a01b03199081166001600160a01b0393841617909155600280549091169282169290921790915581166200024e5760405162461bcd60e51b815260206004820152603460248201527f416c6c6f77616e636543726f776473616c653a20746f6b656e2077616c6c657460448201527f20697320746865207a65726f20616464726573730000000000000000000000006064820152608401620000cf565b600d80546001600160a01b0319166001600160a01b039290921691909117905542821015620002d55760405162461bcd60e51b81526020600482015260336024820152600080516020620018ea83398151915260448201527f6265666f72652063757272656e742074696d65000000000000000000000000006064820152608401620000cf565b8181116200033b5760405162461bcd60e51b81526020600482015260376024820152600080516020620018ea83398151915260448201527f6e6f74206265666f726520636c6f73696e672074696d650000000000000000006064820152608401620000cf565b600e91909155600f55506200042b945050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060008060008060c08789031215620003bc578182fd5b865195506020870151620003d08162000412565b6040880151909550620003e38162000412565b6060880151909450620003f68162000412565b809350506080870151915060a087015190509295509295509295565b6001600160a01b03811681146200042857600080fd5b50565b6114af806200043b6000396000f3fe6080604052600436106101dc5760003560e01c806378e9792511610102578063b7a8807c11610095578063ec8ac4d811610064578063ec8ac4d814610526578063f2fde38b14610534578063f9da4f2d14610554578063fc0c546a1461057457600080fd5b8063b7a8807c146104be578063ba222a37146104d3578063bf583903146104f3578063bff99c6c1461050857600080fd5b80638da5cb5b116100d15780638da5cb5b1461042e5780639e281a981461044c5780639fd63b2e1461046c578063b22d79c21461049e57600080fd5b806378e97925146103c35780637ad3def2146103d9578063848b86e3146103f95780638bc5129b1461041957600080fd5b80634b6753bc1161017a57806369ea17711161014957806369ea17711461033e5780636cae5ef91461035e578063715018a614610394578063727c603b146103a957600080fd5b80634b6753bc146102c15780634ef6f3d0146102d6578063521eb273146102f6578063691f69351461032857600080fd5b80633be0b597116101b65780633be0b597146102575780633e0a322d146102775780634042b66f1461029757806347535d7b146102ac57600080fd5b80631515bc2b146101f657806316d33e201461021e5780632c4e722e1461024257600080fd5b366101f1576101ef33610592565b610592565b005b600080fd5b34801561020257600080fd5b50600f5442115b60405190151581526020015b60405180910390f35b34801561022a57600080fd5b5061023460095481565b604051908152602001610215565b34801561024e57600080fd5b50600454610234565b34801561026357600080fd5b506101ef6102723660046112ce565b61064f565b34801561028357600080fd5b506101ef6102923660046112ce565b61067e565b3480156102a357600080fd5b50600554610234565b3480156102b857600080fd5b506102096106ad565b3480156102cd57600080fd5b50600f54610234565b3480156102e257600080fd5b506102346102f136600461124f565b6106c8565b34801561030257600080fd5b506003546001600160a01b03165b6040516001600160a01b039091168152602001610215565b34801561033457600080fd5b50610234600a5481565b34801561034a57600080fd5b506101ef6103593660046112ce565b61076a565b34801561036a57600080fd5b5061023461037936600461124f565b6001600160a01b03166000908152600b602052604090205490565b3480156103a057600080fd5b506101ef610799565b3480156103b557600080fd5b506006546102099060ff1681565b3480156103cf57600080fd5b5061023460075481565b3480156103e557600080fd5b506101ef6103f436600461124f565b6107cf565b34801561040557600080fd5b506101ef61041436600461124f565b61081b565b34801561042557600080fd5b506101ef610867565b34801561043a57600080fd5b506001546001600160a01b0316610310565b34801561045857600080fd5b506101ef61046736600461126b565b610970565b34801561047857600080fd5b506008546104899063ffffffff1681565b60405163ffffffff9091168152602001610215565b3480156104aa57600080fd5b506101ef6104b93660046112ce565b6109b5565b3480156104ca57600080fd5b50600e54610234565b3480156104df57600080fd5b506101ef6104ee366004611296565b6109e4565b3480156104ff57600080fd5b50610234610a21565b34801561051457600080fd5b50600d546001600160a01b0316610310565b6101ef6101ea36600461124f565b34801561054057600080fd5b506101ef61054f36600461124f565b610b47565b34801561056057600080fd5b506101ef61056f3660046112fe565b610be2565b34801561058057600080fd5b506002546001600160a01b0316610310565b600260005414156105ea5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055346105fa8282610c75565b8060055461060891906113a6565b600555336000908152600b60205260409020546106269082906113a6565b336000908152600b602052604090205561063e610cce565b610646610d07565b50506001600055565b6001546001600160a01b031633146106795760405162461bcd60e51b81526004016105e190611371565b600955565b6001546001600160a01b031633146106a85760405162461bcd60e51b81526004016105e190611371565b600755565b6000600e5442101580156106c35750600f544211155b905090565b6001600160a01b0381166000908152600b602052604081205460045482906106f090836113de565b90506000620151806007544261070691906113fd565b6008546127109061071d9063ffffffff16866113de565b61072791906113be565b61073191906113de565b61073b91906113be565b6001600160a01b0386166000908152600c602052604090205490915061076190826113fd565b95945050505050565b6001546001600160a01b031633146107945760405162461bcd60e51b81526004016105e190611371565b600455565b6001546001600160a01b031633146107c35760405162461bcd60e51b81526004016105e190611371565b6107cd6000610d7e565b565b6001546001600160a01b031633146107f95760405162461bcd60e51b81526004016105e190611371565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146108455760405162461bcd60e51b81526004016105e190611371565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60065460ff166108b95760405162461bcd60e51b815260206004820152601860248201527f546f6b656e205472616e736665722064697361626c656421000000000000000060448201526064016105e1565b336000818152600b60205260409020546109155760405162461bcd60e51b815260206004820152601860248201527f436c61696d61626c6520416d6f756e74206973207a65726f000000000000000060448201526064016105e1565b6000610920826106c8565b905061092c8282610dd0565b6040518181526001600160a01b0383169033907ff9b4eb3e43eebbf559e9b96ceff1c786a7edab2938c7f5f80678197c2e0edba59060200160405180910390a35050565b6001546001600160a01b0316331461099a5760405162461bcd60e51b81526004016105e190611371565b6002546109b1906001600160a01b03168383610dda565b5050565b6001546001600160a01b031633146109df5760405162461bcd60e51b81526004016105e190611371565b600a55565b6001546001600160a01b03163314610a0e5760405162461bcd60e51b81526004016105e190611371565b6006805460ff1916911515919091179055565b60006106c3610a386002546001600160a01b031690565b600d546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a082319060240160206040518083038186803b158015610a7c57600080fd5b505afa158015610a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab491906112e6565b6002546001600160a01b0316600d54604051636eb1769f60e11b81526001600160a01b03918216600482015230602482015291169063dd62ed3e9060440160206040518083038186803b158015610b0a57600080fd5b505afa158015610b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4291906112e6565b610e42565b6001546001600160a01b03163314610b715760405162461bcd60e51b81526004016105e190611371565b6001600160a01b038116610bd65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e1565b610bdf81610d7e565b50565b6001546001600160a01b03163314610c0c5760405162461bcd60e51b81526004016105e190611371565b6127108163ffffffff161115610c595760405162461bcd60e51b81526020600482015260126024820152714d617820726174652069732031303030302160701b60448201526064016105e1565b6008805463ffffffff191663ffffffff92909216919091179055565b610c7d6106ad565b610cc45760405162461bcd60e51b81526020600482015260186024820152772a34b6b2b221b937bbb239b0b6329d103737ba1037b832b760411b60448201526064016105e1565b6109b18282610e5a565b6003546040516001600160a01b03909116903480156108fc02916000818181858888f19350505050158015610bdf573d6000803e3d6000fd5b600954336000908152600b602052604090205411156107cd5760405162461bcd60e51b815260206004820152602d60248201527f43726f776473616c653a20776569416d6f756e74206d757374206265206c657360448201526c73207468616e203220424e422160981b60648201526084016105e1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109b18282610eb3565b6040516001600160a01b038316602482015260448101829052610e3d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ee8565b505050565b6000818310610e515781610e53565b825b9392505050565b610e626106ad565b610ea95760405162461bcd60e51b81526020600482015260186024820152772a34b6b2b221b937bbb239b0b6329d103737ba1037b832b760411b60448201526064016105e1565b6109b18282610fba565b600d546109b1906001600160a01b03168383610ed76002546001600160a01b031690565b6001600160a01b0316929190611090565b6000610f3d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110ce9092919063ffffffff16565b805190915015610e3d5780806020019051810190610f5b91906112b2565b610e3d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105e1565b6001600160a01b0382166110235760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a65604482015269726f206164647265737360b01b60648201526084016105e1565b67016345785d8a00008110156109b15760405162461bcd60e51b815260206004820152602c60248201527f43726f776473616c653a20776569416d6f756e74206d7573742062652062696760448201526b67657220302e3120424e422160a01b60648201526084016105e1565b6040516001600160a01b03808516602483015283166044820152606481018290526110c89085906323b872dd60e01b90608401610e06565b50505050565b60606110dd84846000856110e5565b949350505050565b6060824710156111465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105e1565b6001600160a01b0385163b61119d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105e1565b600080866001600160a01b031685876040516111b99190611322565b60006040518083038185875af1925050503d80600081146111f6576040519150601f19603f3d011682016040523d82523d6000602084013e6111fb565b606091505b509150915061120b828286611216565b979650505050505050565b60608315611225575081610e53565b8251156112355782518084602001fd5b8160405162461bcd60e51b81526004016105e1919061133e565b600060208284031215611260578081fd5b8135610e5381611456565b6000806040838503121561127d578081fd5b823561128881611456565b946020939093013593505050565b6000602082840312156112a7578081fd5b8135610e538161146b565b6000602082840312156112c3578081fd5b8151610e538161146b565b6000602082840312156112df578081fd5b5035919050565b6000602082840312156112f7578081fd5b5051919050565b60006020828403121561130f578081fd5b813563ffffffff81168114610e53578182fd5b60008251611334818460208701611414565b9190910192915050565b602081526000825180602084015261135d816040850160208701611414565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156113b9576113b9611440565b500190565b6000826113d957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156113f8576113f8611440565b500290565b60008282101561140f5761140f611440565b500390565b60005b8381101561142f578181015183820152602001611417565b838111156110c85750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610bdf57600080fd5b8015158114610bdf57600080fdfea2646970667358221220881296d9d03075cf8937dc8625177bbb3784f998a285c5ecd8c87155f65b3c5e64736f6c6343000804003354696d656443726f776473616c653a206f70656e696e672074696d6520697320";

type ITManTokenCrowdsaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ITManTokenCrowdsaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ITManTokenCrowdsale__factory extends ContractFactory {
  constructor(...args: ITManTokenCrowdsaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ITManTokenCrowdsale";
  }

  deploy(
    _rate: BigNumberish,
    _wallet: string,
    _token: string,
    _tokenWallet: string,
    _openingTime: BigNumberish,
    _closingTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ITManTokenCrowdsale> {
    return super.deploy(
      _rate,
      _wallet,
      _token,
      _tokenWallet,
      _openingTime,
      _closingTime,
      overrides || {}
    ) as Promise<ITManTokenCrowdsale>;
  }
  getDeployTransaction(
    _rate: BigNumberish,
    _wallet: string,
    _token: string,
    _tokenWallet: string,
    _openingTime: BigNumberish,
    _closingTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rate,
      _wallet,
      _token,
      _tokenWallet,
      _openingTime,
      _closingTime,
      overrides || {}
    );
  }
  attach(address: string): ITManTokenCrowdsale {
    return super.attach(address) as ITManTokenCrowdsale;
  }
  connect(signer: Signer): ITManTokenCrowdsale__factory {
    return super.connect(signer) as ITManTokenCrowdsale__factory;
  }
  static readonly contractName: "ITManTokenCrowdsale";
  public readonly contractName: "ITManTokenCrowdsale";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ITManTokenCrowdsaleInterface {
    return new utils.Interface(_abi) as ITManTokenCrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITManTokenCrowdsale {
    return new Contract(address, _abi, signerOrProvider) as ITManTokenCrowdsale;
  }
}
